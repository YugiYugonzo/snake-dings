#basic Snake game

import pygame 
import sys
from pygame.math import Vector2
import random

class Snake:
    def __init__(self):
        self.body=[Vector2(5,10),Vector2(4,10),Vector2(3,10)]
        self.direction =Vector2(1,0)
        self.new_block =False
    
    def drawsnake(self):
        for block in self.body:
            block_rect= pygame.Rect(int(block.x * cellsize) ,int(block.y * cellsize) ,cellsize,cellsize)
            pygame.draw.rect(screen,(183,111,122),block_rect)
            
    def move_snake (self):
        if self.new_block == True:
            body_copy=self.body[:]
            body_copy.insert(0,body_copy[0]+ self.direction)
            self.body=body_copy[:]
            self.new_block = False 
        else: 
            body_copy=self.body[:-1]
            body_copy.insert(0,body_copy[0]+ self.direction)
            self.body=body_copy[:]
        
    def addblock (self):
        self.new_block=True

class Fruit:
    def __init__(self):
        self.x=random.randint(0,cellnumber-1)
        self.y=random.randint(0,cellnumber-1)
        self.pos=Vector2(self.x,self.y)
        self.image = pygame.image.load("Bildis/apple.png").convert_alpha()
        self.image = pygame.transform.scale(self.image, (cellsize, cellsize))
    
    def drawfruit(self):
        fruit_rect=pygame.Rect(int(self.pos.x * cellsize),int(self.pos.y * cellsize),cellsize,cellsize)
        screen.blit(self.image,fruit_rect)
        #pygame.draw.rect(screen,(126,166,114),fruit_rect)
        
    def randomize(self):
        self.x=random.randint(0,cellnumber-1)
        self.y=random.randint(0,cellnumber-1)
        self.pos=Vector2(self.x,self.y)
        
class MAIN:
    def __init__(self):
        self.snake=Snake()
        self.fruit=Fruit()
    
    def update(self):
        self.snake.move_snake()
        self.collision()
        self.check_fail()
    
    def draw_elements (self):
        self.draw_grass()
        self.fruit.drawfruit()
        self.snake.drawsnake()
        
    def collision (self):
        if self.fruit.pos == self.snake.body[0]:
            self.fruit.randomize()
            self.snake.addblock()
    
    def check_fail (self):
        if not 0 <= self.snake.body[0].x < cellnumber or not 0 <= self.snake.body[0].y < cellnumber:
            self.game_over()
        for block in self.snake.body[1:]:
            if block == self.snake.body[0]:
                self.game_over()
                
        
    def game_over(self):
        pygame,quit()
        sys.exit()
    
    def draw_grass (self):
        grass_color=(167,209,61)
        for row in range (cellnumber):
            if row % 2==0:
                for col in range (cellnumber):
                     if col % 2 == 0:
                         grass_rect=pygame.Rect(col*cellsize,row*cellsize,cellsize,cellsize)
                         pygame.draw.rect(screen, grass_color,grass_rect)
            else:
                for col in range (cellnumber):
                     if col % 2 != 0:
                         grass_rect=pygame.Rect(col*cellsize,row*cellsize,cellsize,cellsize)
                         pygame.draw.rect(screen, grass_color,grass_rect)
                
                
pygame.init()
cellsize=40
cellnumber=20

screen=pygame.display.set_mode((cellnumber*cellsize,cellnumber*cellsize )) # breite und hÃ¶he vom screen
clock=pygame.time.Clock()   # wie schnell das vieh das runnt



SCREEN_UPDATE = pygame.USEREVENT
pygame.time.set_timer(SCREEN_UPDATE,150)

main_game = MAIN()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame,quit()
            sys.exit()
        if event.type == SCREEN_UPDATE:
            main_game.update()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                if main_game.snake.direction.y != 1:
                    main_game.snake.direction = Vector2(0,-1)
            if event.key == pygame.K_DOWN:
                if main_game.snake.direction.y != -1:
                    main_game.snake.direction = Vector2(0,1)
            if event.key == pygame.K_RIGHT:
                if main_game.snake.direction.x != -1:
                    main_game.snake.direction = Vector2(1,0)
            if event.key == pygame.K_LEFT:
                if main_game.snake.direction.x != 1:
                    main_game.snake.direction = Vector2(-1,0)
    
    
    screen.fill((175,215,70)) 
    main_game.draw_elements()
    pygame.display.update()
    clock.tick(60) #framerate aber 60 is gut

